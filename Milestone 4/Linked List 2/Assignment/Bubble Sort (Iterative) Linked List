Q. Given a singly linked list of integers, sort it using 'Bubble Sort.'
Note :
No need to print the list, it has already been taken care. Only return the new head to the list.
Input format :
The first and the only line of each test case or query contains the elements of the singly linked list separated by a single space.
Remember/Consider :
While specifying the list elements for input, -1 indicates the end of the singly linked list and hence, would never be a list element
Output format :
For each test case/query, print the elements of the sorted singly linked list.

Output for every test case will be printed in a seperate line.
Constraints :
0 <= M <= 10^3
Where M is the size of the singly linked list.

Time Limit: 1sec
Sample Input 1 :
10 9 8 7 6 5 4 3 -1
Sample Output 1 :
 3 4 5 6 7 8 9 10 
____________________________________________________________________________________________________________________________________________________________________________________________
SOL


 
    Following is the class structure of the Node class:

        class Node
        {
        public:
	        int data;
	        Node *next;
	        Node(int data)
	        {
		        this->data = data;
		        this->next = NULL;
	        }
        };

*****************************************************************/

Node *bubbleSort(Node *head)
{
	// Write your code here
     if (head == NULL)
        return head;
    Node *current = head;
    Node *tail = head;
    while (tail->next != NULL)
        tail = tail->next;
    while (current != tail)
    {
        if (current->data > current->next->data)
        {
            int temp = current->next->data;
            current->next->data = current->data;
            current->data = temp;
        }
        if (current->next == tail)
        {
            tail = current;
            current = head;
        }
        else
            current = current->next;
    }
    return head;
}
