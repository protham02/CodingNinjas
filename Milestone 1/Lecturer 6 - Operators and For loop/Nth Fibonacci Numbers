Q. 
Nth term of Fibonacci series F(n), where F(n) is a function, is calculated using the following formula -
    F(n) = F(n-1) + F(n-2), 
    Where, F(1) =  1, 
           F(2) = 1
Provided N you have to find out the Nth Fibonacci Number. Handle edges cases like when n=1 or n=2 by using conditionals like if else and return what's exprected.
Input Format :
The first line of each test case contains a real number ‘N’.
Output Format :
For each test case, print its equivalent Fibonacci number.
Constraints:
1 <= N <= 10000     
Where ‘N’ represents the number for which we have to find its equivalent Fibonacci number.

Time Limit: 1 second
Sample Input 1:
6
Sample Output 1:
8
_______________________________________________________________________________________________________________________________________________________________
SOL

#include<iostream>
using namespace std;

int main(){
     
    int n,n1,n2,n3,i;
    cin >> n;
    if(n==1||n==2)
        cout << 1;
    else{
    for(n1=1,n2=1,i=3;i<=n;i++)
    {
        n3 = n1 + n2;
        n1 = n2;
        n2 = n3;
    }
        cout << n3;
    }
}
