Given an integer sorted array (sorted in increasing order) and an element x, find the x in given array using binary search. Return the index of x.
Return -1 if x is not present in the given array.
Note : If given array size is even, take first mid.
Input format :

Line 1 : Array size

Line 2 : Array elements (separated by space)

Line 3 : x (element to be searched)

Sample Input :
6
2 3 4 5 6 8 
5 
Sample Output:
3 
Hint : Use helper function to solve this question.
_________________________________________________________________________________________________________________________________________________________________
SOL


int binary(int input[] , int start , int end , int element){
    if(end>=start){
        int mid = (start+end)/2;
    if(input[mid] == element){
        return mid;
    }
        else if(input[mid] < element){
		return binary(input , mid+1, end , element);
        }
        else if(input[mid]> element){
            return binary (input , start , mid-1 , element);
        }
        
    }
    else {
            return -1;
        }
}
int binarySearch(int input[], int size, int element) {
  binary(input, 0, size - 1, element);
}
